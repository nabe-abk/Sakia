use strict;
#-------------------------------------------------------------------------------
# Exif記法プラグイン
#                                                   (C)2015 nabe / nabe@abk.nu
#-------------------------------------------------------------------------------
package Sakia::TextParser::TagPlugin::Tag_exif;
# ●サンプル
#	[exif:%d:%f:%271 %272 / %37386mm F%33437 %33434sec ISO%34855]
#
################################################################################
# ■基本処理
################################################################################
#-------------------------------------------------------------------------------
# ●コンストラクタ
#-------------------------------------------------------------------------------
sub new {
	my $class = shift;	# 読み捨て
	my $ROBJ  = shift;	# 読み捨て
	my $tags  = shift;

	#---begin_plugin_info
	$tags->{'exif'}->{data} = \&exif;
	#---end

	return ;
}
################################################################################
# ■タグ処理ルーチン
################################################################################
#-------------------------------------------------------------------------------
# ●exif記法
#-------------------------------------------------------------------------------
sub exif {
	my ($pobj, $tag, $cmd, $ary, $tagclass) = @_;
	my $tags = $pobj->{tags};
	my $ROBJ = $pobj->{ROBJ};

	#  構成
	my $file;
	my $tname = $tag->{name};
	if (exists $tags->{"$tname#link"}) {
		my $link = $tags->{"$tname#link"}->{data};
		$file = $pobj->replace_link($link, $ary, $tags->{"$tname#link"}->{argc});
	} else {
		$file = $pobj->{vars}->{image} . shift(@$ary) . shift(@$ary);
	}

	# exifのロード
	my $jpeg = $ROBJ->loadpm('Jpeg');
	my $info = $jpeg->get_exif_info( $file );
	if (!$info || !%$info) {
		return '(Exif not found!)';
	}

	my $str = join(':',@$ary);
	$str =~ s/%(\d+)/$info->{$1}/g;
	return $str;
}



1;
